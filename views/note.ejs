<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>note</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Noto+Serif+KR&family=Roboto:wght@400;500&display=swap" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

  </head>

  <style>
    /* 상단 고정 */
    * {
      font-family: "Noto Serif KR", serif;
      color: #78715e;
    }

    body {
      background-color: #ece8e4;
      position: relative;
    }

    header {
      background-color: #e1ddd6;
      position: fixed;
      z-index: 100;
      height: 40px;
      width: 100%;
    }

    nav {
      background-color: #e1ddd6;
    }

    main {
      min-height: 2000px;
    }

    footer {
      font-size: smaller;
      height: 140px;
      /* background-color: #78715e; */
      text-align: center;
      /* color: whitesmoke; */
    }

    .navbar {
      margin-top: -1%;
      width: 100%;
    }

    /* 변동 */
    .thumbnailBox {
      position: relative;
      top: 80px;
      height: 300px;
      /* border: 1px solid #78715e; */
    }

    .postTitleBox {
      position: relative;
      top: 80px;
      height: 60px;
      /* border: 1px solid #78715e; */
    }

    .ContentBox {
      position: relative;
      top: 80px;
      /* height: 1000px;
      border: 1px solid #78715e; */
    }

    .noneBox {
      position: relative;
      top: 80px;
      height: 50px;
      /* border: 1px solid #78715e; */
    }

    .commentBox {
      position: relative;
      top: 80px;
      height: 500px;
     
    }

    .comment {
      font-weight: bolder;
      font-size: larger;
    }

    .addComment {
      border: 1px solid #78715e;
      color: #78715e;
    }

    .addComment:hover {
      border: 1px solid #78715e;
      background-color: #78715e;
      color: whitesmoke;
    }

    .editOkComment {
      border: 1px solid #78715e;
      background-color: #78715e;
      color: whitesmoke;


      .editOkComment:hover {
        border: 1px solid #78715e;
        color: #78715e;
      }
    }

    .polaroid {
      background: #000;
      /*Change this to a background image or remove*/
      border: solid #fff;
      border-width: 6px 6px 20px 6px;
      box-shadow: 1px 1px 5px #333;
      /* Standard blur at 5px. Increase for more depth */
      -webkit-box-shadow: 1px 1px 5px #333;
      -moz-box-shadow: 1px 1px 5px #333;
      height: 250px;
      /*Set to height of your image or desired div*/
      width: 250px;
      /*Set to width of your image or desired div*/
    }

    .commentTextColor {
      color: #78715e;

    }
  </style>
  <body>
    <!-- ------------header------------ -->
    <header><%- include ('fragment/header') %></header>

    <!-- ------------main------------ -->
    <main>
      <%
      function removeHtmlTags(input) {
        return input.replace(/<[^>]*>/g, '');
      }
      %>
      <!-- 썸네일 영역 -->
      <div class="container thumbnailBox mx-auto m-1" id="thumbnailBox">
        <img src="<%=note.img%>" class="img-responsive center-block d-block mx-auto polaroid" />


        <!-- ------------게시글 수정 삭제 버튼------------ -->
        <div align="right" id="noteEditButton">
          <div>작성자 : <%=note.connectUser  %> </div>

          <div id="forUser">
            <% if (note.connectUser == user) { %>
            <a href="/notebook/notemodify/<%=note.noteId%>">
              <button type="button" onclick="editNote()" class="btn addComment justify-content-end">수정</button>
            </a>
            <a href="/notebook/notedelete/<%=note.noteId%>">
              <button type="button" class="btn addComment justify-content-end">삭제</button>
            </a>
            <% } else { %>
            <!-- 다른 내용 추가할 수 있음 -->
            <% } %>
          </div>

        </div>
      </div>

      <!-- ------------  note 데이터로 들어옵니다.  ------------ -->
      <!-- ------------제목 영역------------ -->
      <div class="container postTitleBox mx-auto m-1">
        <h1 class="display-6"><%= removeHtmlTags(note.title) %>
        </h1>
        <hr />
        <!-- ------------게시글 영역------------ -->
        <div class="container ContentBox mx-auto m-1">
          <%= removeHtmlTags(note.content) %>

        </div>
        <!-- ------------게시글 밑 공백 빈 박스------------ -->
        <div class="container noneBox mx-auto m-1">
        </div>
        <!-- ------------댓글 영역------------ -->
        <div class="container commentBox mx-auto m-1">
          <div class="mb-3">
            <hr>
            <label for="exampleFormControlTextarea1" class="form-label comment ">Comment</label>
            <!-- table-->
            <table class="table table-hover table-borderless">
              <tbody >
                <!-- 댓글 관련된 코드는 유지 -->
                <% for(let i = 0; i < comment.length; i++) { %>
                  <tr id="tr_<%=comment[i].commentId%>">
                    <td colspan="2">
                      <p class="pb-1 mb-0 small lh-sm">
                        <strong class="d-block "><%= comment[i].user ? comment[i].user.dataValues.nickname : 'Unknown User' %></strong>
                        <%= comment[i].commentWrite %>
                      </p>
                      <hr>
                    </td>
                    <td>
                      <% if (comment[i].createdAt.getTime() !== comment[i].updatedAt.getTime()) { %>
                        수정된 시간: <%= comment[i].updatedAt.toLocaleString() %>
                      <% } else { %>
                        등록한 시간: <%= comment[i].createdAt.toLocaleString() %>
                      <% } %>
                      <% if(comment[i].email == user) { %>
                        <button type="button" onclick="updateComment('<%= comment[i].commentId %>')" class="btn addComment justify-content-end showCommentEditBtn">수정</button>
                        <button type="button" onclick="deleteComment('<%= comment[i].commentId %>')" class="btn addComment justify-content-end showCommentEditBtn">삭제</button>
                      <% } else { %>
                      <% }  %>
                    </td>
                  </tr>
                <% } %>
              </tbody>
            </table>
            <form name="inputComment">
              <textarea class="form-control" id="commentTextarea" rows="3" name="comment" placeholder="댓글을 작성해주세요."></textarea>
              <input type="hidden" name="email" value="<%= user %>" disabled/>
              <input type="hidden" name="noteId" value="<%= note.noteId %>" disabled/>          
              <div align="right" class="commentBtnGroup">
                <div id="noComment"></div>
                <button type="button" onclick="addComment()" class="btn addComment justify-content-end" id="commentTextareaBtn">작성</button>
              </div>
            </form>
          </div>

    </main>
    <!-- ------------footer------------ -->

    <footer><%- include ('fragment/footer') %></footer>

    <script>


      //--------------------썸네일 넣고 빼기 
      const thumbnailBox = document.getElementById("thumbnailBox")

     
        //댓글 추가하는 post 요청
      function addComment(){
        let commentText = document.getElementById("commentTextarea").value;
        let textElement = document.getElementById("noComment");

        if (commentText.trim() === "") {
          textElement.textContent = "작성된 내용이 없습니다.😅";
          return false;
        } else {
          textElement.textContent = "";
        }
        const form = document.forms["inputComment"];

        const data = {
          commentWrite: form.comment.value,
          email: form.email.value,
          noteId: form.noteId.value,
        };

        axios({
          method: "post",
          url: `/notebook/${'<%= note.noteId %>'}/comment`,
          data: data
        }).then((res)=>{
          location.reload();
        }).catch((error) => {
          console.error("axios 호출 중 오류:", error);
        })
      }

   
      //댓글 지우는 함수
      function deleteComment(commentId){
        let userConfirmed = window.confirm("정말 삭제하시겠습니까??");

        if(userConfirmed){
          axios({
            method: 'delete',
            url: `/notebook/${'<%= note.noteId %>'}/comment/${commentId}`
          }).then((res) => {
            alert("댓글을 삭제했습니다.");
            location.reload();
          }).catch((err) => {
            alert("완료 되었습니다.");
          })
          location.reload();
        }
      }

     
  //댓글 수정 함수
      function updateComment(commentId) {
        axios({
          method: 'get',
          url: `/notebook/${'<%= note.noteId %>'}/comment/${commentId}`,
        }).then((res) => {
          const { commentWrite, nickname } = res.data;
          const form = document.forms['inputComment'];
          form.comment.value = commentWrite;
        });

        var btnGroup = document.querySelector(".commentBtnGroup");
          btnGroup.innerHTML = `
            <button type="button" onclick="updateCommentConfirm('${commentId}')" class="btn addComment justify-content-end" id="commentTextareaBtn">수정 하기</button>
            <button type="button" onclick="cancelUpdateComment()" class="btn addComment justify-content-end">수정 취소</button>
        `;
      }

     
      // 댓글 수정 취소하기
      function cancelUpdateComment(){
        location.reload();
      }

      //댓글 post 요청보내기
      function updateCommentConfirm(commentId) {
        const form = document.forms["inputComment"];
        const data = {
          commentWrite: form.comment.value,
        };

        axios({
          method: "patch",
          url: `/notebook/${'<%= note.noteId %>'}/comment/${commentId}`,
          data: data
        }).then((res) => {
          console.log(res.data.result);
          alert("댓글 수정 성공!");
          location.reload();
        }).catch((err) => {
          console.log(err);
          alert("댓글 수정 실패");
        })
      }


      //
      function noteEditBtnShow(noteId, useId) {
        const showEditBrn = document.getElementById("noteEditButton")
        console.log("showEditBrn", showEditBrn)

        if (useId) {
          if (noteId === useId) {
            showEditBrn.style.visibility = "visible";
          } else {
            showEditBrn.style.visibility = "hidden";
          }
        }
      }
      noteEditBtnShow("hi", "hi")

 
      function myNoteEdit() {
        location.href = "/notebook/write";
      }

      //--게시글 삭제 버튼
      function myNoteDelete() {
        if (window.confirm("정말 삭제하시겠습니까??")) {
          location.href = "/notebook";
        } else {
          return false;
        }
      }
    </script>
  </body>
</html>