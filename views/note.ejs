<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>note</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Noto+Serif+KR&family=Roboto:wght@400;500&display=swap" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

  </head>

  <style>
    /* 상단 고정 */
    * {
      font-family: "Noto Serif KR", serif;
      color: #78715e;
    }

    body {
      background-color: #ece8e4;
      position: relative;
    }

    header {
      background-color: #e1ddd6;
      position: fixed;
      z-index: 100;
      height: 40px;
      width: 100%;
    }

    nav {
      background-color: #e1ddd6;
    }

    main {
      min-height: 2000px;
    }

    footer {
      font-size: smaller;
      height: 140px;
      /* background-color: #78715e; */
      text-align: center;
      /* color: whitesmoke; */
    }

    .navbar {
      margin-top: -1%;
      width: 100%;
    }

    /* 변동 */
    .thumbnailBox {
      position: relative;
      top: 80px;
      height: 300px;
      /* border: 1px solid #78715e; */
    }

    .postTitleBox {
      position: relative;
      top: 80px;
      height: 60px;
      /* border: 1px solid #78715e; */
    }

    .ContentBox {
      position: relative;
      top: 80px;
      /* height: 1000px;
      border: 1px solid #78715e; */
    }

    .noneBox {
      position: relative;
      top: 80px;
      height: 50px;
      /* border: 1px solid #78715e; */
    }

    .commentBox {
      position: relative;
      top: 80px;
      height: 500px;
      border: 1px solid #78715e;
    }

    .comment {
      font-weight: bolder;
      font-size: larger;
    }

    .addComment {
      border: 1px solid #78715e;
      color: #78715e;
    }

    .addComment:hover {
      border: 1px solid #78715e;
      background-color: #78715e;
      color: whitesmoke;
    }

    .editOkComment {
      border: 1px solid #78715e;
      background-color: #78715e;
      color: whitesmoke;


      .editOkComment:hover {
        border: 1px solid #78715e;
        color: #78715e;
      }
    }

    .polaroid {
      background: #000;
      /*Change this to a background image or remove*/
      border: solid #fff;
      border-width: 6px 6px 20px 6px;
      box-shadow: 1px 1px 5px #333;
      /* Standard blur at 5px. Increase for more depth */
      -webkit-box-shadow: 1px 1px 5px #333;
      -moz-box-shadow: 1px 1px 5px #333;
      height: 250px;
      /*Set to height of your image or desired div*/
      width: 250px;
      /*Set to width of your image or desired div*/
    }

    .commentTextColor {
      color: #78715e;

    }
  </style>
  <body>
    <!-- ------------header------------ -->
    <header><%- include ('fragment/header') %></header>

    <!-- ------------main------------ -->
    <main>
      <%
      function removeHtmlTags(input) {
        return input.replace(/<[^>]*>/g, '');
      }
      %>
      <!-- 썸네일 영역 -->
      <div class="container thumbnailBox mx-auto m-1" id="thumbnailBox">
        <img src="http://<%=note.img%>" class="img-responsive center-block d-block mx-auto polaroid" />


        <!-- ------------게시글 수정 삭제 버튼------------ -->
        <div align="right" id="noteEditButton">
        
        <span style="display:none" id="user"> <%=note.connectUser %></span>
        <div id="forUser">

          <a href="/notebook/notemodify/<%=note.noteId%>">
            <button type="button" class="btn addComment justify-content-end">수정</button>
          </a>
          <a href="/notebook/notedelete/<%=note.noteId%>">
            <button type="button" onclick="myNoteDelete()" class="btn addComment justify-content-end">삭제</button>
          </a>
        </div>
        
        </div>
      </div>

      <!-- ------------  note 데이터로 들어옵니다.  ------------ -->
      <!-- ------------제목 영역------------ -->
      <div class="container postTitleBox mx-auto m-1">
        <h1 class="display-6"><%= removeHtmlTags(note.title) %>
        </h1>
        <hr />
        <!-- ------------게시글 영역------------ -->
        <div class="container ContentBox mx-auto m-1">
          <%= removeHtmlTags(note.content) %>

        </div>
        <!-- ------------게시글 밑 공백 빈 박스------------ -->
        <div class="container noneBox mx-auto m-1">

        </div>
        <!-- ------------댓글 영역------------ -->
        <div class="container commentBox mx-auto m-1">
          <div class="mb-3">
            <label for="exampleFormControlTextarea1" class="form-label comment ">Comment</label>
            <!-- table-->
            <table class="table table-hover table-borderless">
              
            </table>
            <form name="inputComment">
              <textarea class="form-control" id="commentTextarea" rows="3" name="comment" placeholder="댓글을 작성해주세요."></textarea>
              <input type="hidden" name="noteId" value="<%= note.noteId %>" disabled/>
              <div align="right" class="commentBtnGroup">
                <div id="noComment"></div>
                <button type="button" onclick="addComment()" class="btn addComment justify-content-end" id="commentTextareaBtn">작성</button>
              </div>
          </form>
        </div>
    </main>
    <!-- ------------footer------------ -->

    <footer><%- include ('fragment/footer') %></footer>
    <!-- <span style="color: whitesmoke">
        <br />
        &nbsp; non-blogging <br />
        &nbsp; 사업자등록번호 : 000-00-00000<br />
        &nbsp; 주소 : 서울특별시 용산구 한강로 <br />
        &nbsp; 대표번호: 1644-0000<br />
        &nbsp; Copyright(c) 2023 non-blogging. All Rights Reserved.
      </span> -->

    <!-- ------------script------------ -->
    <script>
     const user = document.getElementById('user').innerText
     const userstorage =JSON.parse( localStorage.getItem('user'))
     console.log(user, userstorage)
      if(user!=userstorage){
        document.getElementById('forUser').style.display = 'none';
      }
      //--------------------썸네일 넣고 빼기 
      const thumbnailBox = document.getElementById("thumbnailBox")


      //이미지 안받아왔다면? (임시) ^^
      // let imageId = "";

      // if (!imageId) {
      //   thumbnailBox.style.display = "none";
      // } else if (imageId) {
      //   thumbnailBox.style.display = "block";
      // }

      function cancelUpdateComment(){
        location.reload();
      }

      //--------------------댓글 등록
      function addComment(){
        let commentText = document.getElementById("commentTextarea").value;
        let textElement = document.getElementById("noComment");
        if (commentText.trim() === "") {
          textElement.textContent = "작성된 내용이 없습니다.😅";
          return false;
        } else {
          textElement.textContent = "";
        }
        const form = document.forms["inputComment"];

        const data = {
          commentWrite: form.comment.value,
          noteId: form.noteId.value,
          email: form.email.value,
        };

        axios({
          method: "post",
          url: `/notebook/${'<%= note.noteId %>'}/comment`,
          data: data
        }).then((res)=>{
          // alert("댓글 달기 성공!");
          location.reload();
        })
      }

      //--------------------댓글 삭제 (본인 댓글만 삭제할 수 있어야 하니 user id 값에 따라 삭제 버튼 안보이도록.)
      //얘는 노트아이디랑은 별개. 댓글 자체의 아이디.
      //user가 해당 댓글의 id값을 가지고 있는지에 따라 판단? 
      //각 댓글의 id값을 login한 user가 가지고 있느다면 삭제 버튼이 보여야한다; 
      //로그인한 유저(로그인한 값이 null이 아니면서)이면서 + 댓글작성자의 idr가 같아야 한다.
      //그럼 댓글 작성하면서 로그인한 userId값을 보내야한다?
      //댓글 작성하면서 로그인한 본이 id를 같이 보내야하네
      function deleteComment(commentId) {
        let userConfirmed = window.confirm("정말 삭제하시겠습니까??");
        if(userConfirmed){
          axios({
            method: 'delete',
            url: `/notebook/${'<%= note.noteId %>'}/comment/${commentId}`
          }).then((res) => {
            alert("댓글을 삭제했습니다.");
            location.reload();
          }).catch((err) => {
            alert("댓글을 삭제할 수 없습니다.");
          })
        }
      }

      //--------------------댓글 수정 (본인 댓글만 수정할 수 있어야 하니 user id 값에 따라 삭제 버튼 안보이도록.
      //--------------------댓글 수정 삭제 버튼 visibility
      //user가 작성한 댓글에 있는 commentId 유무에 따라.
      //*user가 해당 commentId를 가지고 있느냐 없느냐.
      //commentId는 댓글아이디, userId는 로그인한유저아이디

      // let commentId = "writer1"
      // let userId = "writer1"

      function updateComment(commentId) {
        axios({
          method: 'get',
          url: `/notebook/${'<%= note.noteId %>'}/comment/${commentId}`,
        }).then((res) => {
          const { commentWrite, nickname } = res.data;
          const form = document.forms['inputComment'];
          form.comment.value = commentWrite;
        });

        var btnGroup = document.querySelector(".commentBtnGroup");
          btnGroup.innerHTML = `
            <button type="button" onclick="updateCommentConfirm('${commentId}')" class="btn addComment justify-content-end" id="commentTextareaBtn">수정하기</button>
            <button type="button" onclick="cancelUpdateComment()" class="btn addComment justify-content-end">수정 취소</button>
        `;
      }

      function updateCommentConfirm(commentId) {
        const form = document.forms["inputComment"];

        const data = {
          commentWrite: form.comment.value,
        };

        axios({
          method: "patch",
          url: `/notebook/${'<%= note.noteId %>'}/comment/${commentId}`,
          data: data
        }).then((res) => {
          console.log(res.data.result);
          // alert("댓글 수정 성공!");
          location.reload();
        }).catch((err) => {
          console.log(err);
          alert("댓글 수정 실패");
        })
      }

      //--------------------게시글 수정 삭제 버튼 visibility
      //user가 작성한 노트에 있는 noteId 유무에 따라.
      //*user가 해당 noteId를 가지고 있느냐 없느냐.
      //noteId는 게시글아이디, useId는 로그인한유저아이디
      // let useId = "hi"
      // let noteId = "hi"

      function noteEditBtnShow(noteId, useId) {
        const showEditBrn = document.getElementById("noteEditButton")
        console.log("showEditBrn", showEditBrn)

        if (useId) {
          if (noteId === useId) {
            showEditBrn.style.visibility = "visible";
          } else {
            showEditBrn.style.visibility = "hidden";
          }
        }
      }
      noteEditBtnShow("hi", "hi")

      //-------------------------------------게시글 수정 버튼
      //유저가 작성한 데이터 값 어떻게 가져오지? ^^
      //페이지에 저장된 내용 그대로 가져와야한다.
      function myNoteEdit() {
        location.href = "/notebook/note";
      }

      //-------------------------------------게시글 삭제 버튼
      function myNoteDelete() {
        if (window.confirm("정말 삭제하시겠습니까??")) {
          location.href = "/notebook";
        } else {
          return false;
        }
      }
    </script>
  </body>
</html>